version: '3.8'
services:
  db:
    container_name: "db"
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  nest-app:
    container_name: "api"
    build:
      context: ./nest-app
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./nest-app:/app
      - /app/node_modules
    command: sh -c "apk add --no-cache curl && sh ./entrypoint.sh"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:4200/api/health || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 20

#  next-app:
#    container_name: "front"
#    build:
#      context: ./next-app
#      dockerfile: Dockerfile
#      args:
#        - NODE_ENV=production
#        - NEXT_PORT=3000
#        - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
#        - NEXT_PUBLIC_FRONTEND_URL=${NEXT_PUBLIC_FRONTEND_URL}
#        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
#        - NEXTAUTH_URL=${NEXTAUTH_URL}
#    ports:
#      - "3000:3000"
#    depends_on:
#      nest-app:
#        condition: service_healthy
#    environment:
#      - NODE_ENV=production
#      - NEXT_PORT=3000
#      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
#      - NEXT_PUBLIC_FRONTEND_URL=${NEXT_PUBLIC_FRONTEND_URL}
#      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
#      - NEXTAUTH_URL=${NEXTAUTH_URL}
#      - HOSTNAME=0.0.0.0
#    env_file:
#      - .env

volumes:
  db-data:
