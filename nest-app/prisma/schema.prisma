generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  password  String?
  name      String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts     Account[]
  repositories GithubRepository[]

  @@map("users")
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int     @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map("accounts")
}

model GithubRepository {
  id        Int      @id @default(autoincrement())
  owner     String
  name      String
  url       String
  stars     Int      @default(0)
  forks     Int      @default(0)
  issues    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, owner, name])
  @@index([userId])
  @@map("github_repositories")
}
